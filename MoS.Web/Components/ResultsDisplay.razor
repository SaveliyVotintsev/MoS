@using MoS.Web.Services
@using System.Globalization
@inject IClipboardService ClipboardService

@if (CalculateData == null || CalculateResult == null)
{
    <MudStack AlignItems="AlignItems.Center"
              Row>
        <MudProgressCircular Indeterminate />
        <MudText Typo="Typo.body1">Нет результатов...</MudText>
    </MudStack>
}
else
{
    <MudStack Spacing="3">
        <div id="result">
            <MudCard Elevation="5">
                <MudCardHeader>
                    <MudStack AlignItems="AlignItems.Center"
                              Justify="Justify.SpaceAround"
                              Row
                              Spacing="3">
                        <MudIcon Color="Color.Success"
                                 Icon="@Icons.Material.Filled.Report"
                                 Size="Size.Large">
                        </MudIcon>
                        <MudText Color="Color.Success"
                                 Typo="Typo.h5">
                            Результат
                        </MudText>
                    </MudStack>
                </MudCardHeader>
                <MudCardContent>
                    <MudTextField Adornment="Adornment.Start"
                                  AdornmentColor="Color.Success"
                                  AdornmentIcon="@Icons.Material.Filled.ContentCopy"
                                  AutoGrow
                                  FullWidth
                                  OnAdornmentClick="@(() => CopyToClipboard(CalculateResult.Result))"
                                  ReadOnly
                                  Typo="Typo.h6"
                                  Value="CalculateResult.Result">
                    </MudTextField>
                </MudCardContent>
            </MudCard>
        </div>

        <GraphComponent @ref="_graph" />

        <MudExpansionPanel Text="Расчеты">
            <MudList T="string">
                <ListItem Ripple="false"
                          T="string"
                          Value="@CalculateData.b0.ToString($"F{Decimals}", CultureInfo.InvariantCulture)">
                    B<sub>0</sub>: @CalculateData.b0.ToString($"F{Decimals}", CultureInfo.InvariantCulture)
                </ListItem>
                <ListItem Ripple="false"
                          T="string"
                          Value="@CalculateData.a0.ToString($"F{Decimals}", CultureInfo.InvariantCulture)">
                    A<sub>0</sub>: @CalculateData.a0.ToString($"F{Decimals}", CultureInfo.InvariantCulture)
                </ListItem>
                <ListItem Ripple="false"
                          T="string"
                          Value="@CalculateData.a1.ToString($"F{Decimals}", CultureInfo.InvariantCulture)">
                    A<sub>1</sub>: @CalculateData.a1.ToString($"F{Decimals}", CultureInfo.InvariantCulture)
                </ListItem>
                <ListItem Ripple="false"
                          T="string"
                          Value="@CalculateData.a2.ToString($"F{Decimals}", CultureInfo.InvariantCulture)">
                    A<sub>2</sub>: @CalculateData.a2.ToString($"F{Decimals}", CultureInfo.InvariantCulture)
                </ListItem>
                <ListItem Ripple="false"
                          T="string"
                          Value="@CalculateData.a3.ToString($"F{Decimals}", CultureInfo.InvariantCulture)">
                    A<sub>3</sub>: @CalculateData.a3.ToString($"F{Decimals}", CultureInfo.InvariantCulture)
                </ListItem>
            </MudList>

            <MudExpansionPanels MultiExpansion
                                @ref="_panels">
                <MudExpansionPanel Text="Корни">
                    <MudList T="Complex">
                        @foreach (Complex root in CalculateResult.Roots)
                        {
                            <MudListItem>@root</MudListItem>
                        }
                    </MudList>
                    <MudDivider />
                    <MudList T="string">
                        @foreach (string root in CalculateResult.Roots.Select(complex => ComplexFormatter.FormatComplex(complex, Decimals)))
                        {
                            <MudListItem>@root</MudListItem>
                        }
                    </MudList>
                </MudExpansionPanel>

                <MudExpansionPanel Text="Производные">
                    <MudList T="Complex">
                        @foreach (Complex derivative in CalculateResult.Derivatives)
                        {
                            <MudListItem>@derivative</MudListItem>
                        }
                    </MudList>
                    <MudDivider />
                    <MudList T="string">
                        @foreach (string derivative in CalculateResult.Derivatives.Select(complex => ComplexFormatter.ToE(complex, Decimals)))
                        {
                            <MudListItem>@derivative</MudListItem>
                        }
                    </MudList>
                </MudExpansionPanel>

                <MudExpansionPanel Text="hBezEList">
                    <MudList T="Complex">
                        @foreach (Complex h in CalculateResult.HBezEList)
                        {
                            <MudListItem>@h</MudListItem>
                        }
                    </MudList>
                    <MudDivider />
                    <MudList T="string">
                        @foreach (string h in CalculateResult.HBezEList.Select(complex => ComplexFormatter.ToE(complex, Decimals)))
                        {
                            <MudListItem>@h</MudListItem>
                        }
                    </MudList>
                </MudExpansionPanel>

                <MudExpansionPanel Text="Значения EH">
                    <MudList T="string">
                        @foreach (string e in CalculateResult.Eh)
                        {
                            <MudListItem>@e</MudListItem>
                        }
                    </MudList>
                </MudExpansionPanel>
            </MudExpansionPanels>
        </MudExpansionPanel>
    </MudStack>
}
